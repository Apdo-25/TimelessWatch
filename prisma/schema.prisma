datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  role           Role      @default(User)
  accounts       Account[]
  orders         Order[]
  address        Address[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum Role {
  User
  Admin
}

model Order {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  userId          String        @db.ObjectId
  amount          Float
  currency        String
  status          String
  deliverySatus   String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  paymentIntentID String        @unique
  products        CartProduct[]
  address         Address?      @relation(fields: [addressId], references: [id])
  user            User          @relation(fields: [userId], references: [id])

  addressId String? @db.ObjectId
}

model CartProduct {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  description String
  category    String
  brand       String
  image       Image   @relation(fields: [imageId], references: [id])
  quantity    Int
  Order       Order?  @relation(fields: [orderId], references: [id])
  orderId     String? @db.ObjectId
  imageId     String  @db.ObjectId
}

model Image {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  color       String
  colorCode   String
  Image       String
  CartProduct CartProduct[]
}

model Address {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  city       String
  country    String
  line1      String
  line2      String
  postalCode String
  state      String
  Order      Order[]
  User       User?   @relation(fields: [userId], references: [id])
  userId     String? @db.ObjectId
}
